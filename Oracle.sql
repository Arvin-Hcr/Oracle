--存过基础语法：
CREATE OR REPLACE PACKAGE PACK_AIP_IAAS IS
END PACK_AIP_IAAS;
/
CREATE OR REPLACE PACKAGE BODY PACK_AIP_IAAS IS
END PACK_AIP_IAAS;

--具体实现：
CREATE OR REPLACE PACKAGE PCKG_AIP_VCDS_LINE_COVERAGE IS

FUNCTION FUN_AREA_CODE(IN_DEPT_CODE IN VARCHAR2) RETURN VARCHAR2;

FUNCTION FUN_PRO_NAME(IN_PRO IN VARCHAR2) RETURN VARCHAR2;

PROCEDURE PROC_QUERY_VCDS_COVERAGE(
 	IN_APPCODE      IN VARCHAR2,
 	IN_DEPT         IN VARCHAR2,
 	...
 	OUT_FLAG        OUT VARCHAR2,
 	OUT_MAG         OUT VARCHAR2,
 	OUT_LIST        OUT SYS_REFUCRSOP);

PROCEDURE PROC_QUERY_VCDS_COVERAGE(
 	IN_APPCODE      IN VARCHAR2,
 	IN_DEPT         IN VARCHAR2,
 	...
 	OUT_FLAG        OUT VARCHAR2,
 	OUT_MAG         OUT VARCHAR2,
 	OUT_LIST        OUT SYS_REFUCRSOP);

...

END PCKG_AIP_VCDS_LINE_COVERAGE;

CREATE OR REPLACE PACKAGE BODY PCKG_AIP_VCDS_LINE_COVERAGE IS

FUNCTION FUN_AREA_CODE (IN_DEPT_CODE IN VARCHAR2) RETURN VARCHAR2
   IS
   V_CODE VARCHAR2(200);
   V_SQL VARCHAR2(600);
   BEGIN
      IF IN_DEPT_CODE IS NULL OR LENGTH(IN_DEPT_CODE) = 0 THEN 
      RETURN '';
      END IF;

   V_SQL := ' SELECT TO_CHAR(WM_CONCAT(BRANCH_NAME)) FROM AIP_BRANCH_ORDER WHERE BRANCH_ID IN ('''||
   REPLACE (IN_DEPT_CODE,',',''',''')||''')';

   EXECUTE IMMEDIATE V_SQL INTO V_CODE;
   RETURN V_CODE;
  EXCEPTION
   WHERE OTHERS THEN
     RETURN '';
   END;

   ....

PROCEDURE PROC_QUERY_VCDS_COVERAGE( IN_APPCODE IN VARCHAR2,
									IN_DEPT    IN VARCHAR2,
									...
									OUT_FLAG   OUT VARCHAR2,
									OUT_MSG    OUT VARCHAR2,
									OUT_LIST   OUT SYS_REFUCRSOP)
	IS
	V_SQL VARCHAR2(5120);
	V_TIME VARCHAR2(8);
	BEGIN
		OUT_FLAG := '0';
		OUT_MAG := '';
		V_TIME := IN_APPCODE;
		/**
		开始时间大于上月25号且小于本月26号
		**/
		IF IN_APPCODE IS NULL OR LENGTH(IN_APPCODE)<6 THEN
		V_TIME := TO_CHAR(ADD_MONTHS(SYSDATE,+1) - 25, 'YYYY-MM');
		END IF;

		V_SQL := ' SELECT A.APP,'||
			 	 ' PCKG_AIP_VCDS_LINE_COVERAGE.FUN_AREA_CODE(A.DEVDEPT_CODE) DEVDEPT_CODE,'||
			 	 ' A.IS_DIRECT'||
			 	 ' FORM '||
			 	 ...
			 	 ' WHERE DEPLOYDEDTAE = '''||V_TIME||'''';
		IF IN_APPCODE IS NOT NULL AND LENGTH(IN_APPCODE)>0 THEN
			V_SQL := V_SQL || ' AND APPSHORENAME='''||IN_APPCODE||'''';
			END IF;
		IF ... END IF;
		V_SQL := V_SQL || 'GROUP BY APPSHORID)'||
		....
/** 
本地调试SQL语句输出 (DEBUG)
	DBMS_OUTPUT.PUT_LINE(V_SQL);
	**/
		OPEN OUT_LIST FOR V_SQL;

	OUT_MSGP := 'PCKG_AIP_VCDS_LINE_COVERAGE.PROC_QUERY_VCDS_COVERAGE 执行成功';
	RETURN;
EXCEPTION
	WHEN OTHERS THEN
		IF OUT_LIST%ISOPEN THEN
			CLOSE OUT_LIST;
		END IF;
		OUT_FLAG := '-1';
		OUT_MSG := SQLERRM(SQLCODE);
		PCKG_CTP_LG_PUBLIC.LOG('PCKG_AIP_VCDS_LINE_COVERAGE.PROC_QUERY_VCDS_COVERAGE',
			SQLERRM(SQLCODE));
		RETURN;
	END;

/**************************
  --函数名称： PROC_QUERY_VCDS_LINE_COVERAGE
  --函数描述： DBSP智能基线
  --功能模块： DSBP
**************************/
  PROCEDURE PROC_QUERY_VCDS_LINE_COVERAGE(IN_VCDS_MONTH    IN VARCHAR2,
  										  IN_START_PAGE    IN VARCHAR2,
  										  IN_DEN_PAGE      IN VARCHAR2)

  	IS

  	BEGIN
  	OUT_FLAG := '0';
  	OUT_MSG := 'OK';
  	V_TIME := IN_VCDS_MONTH;

/**
	IF (V_COUNT <> 0) THEN
		SELECT MAX(R.SD_BRANCH_ID)
		INTO V_DEV_BRANCH
		FROM SD_AIP_BRANCH_REL B
		WHERE B.AIP_BRANCH_ID = V_DEPT;
	ELSE
	....
**/

  	/**
  	上月的21日到本月的20日
  	**/
  	IF IN_VCDS_MONTH IS NULL OR LENGTH(IN_VCDS_MONTH)<6 THEN
  	V_TIME := TO_CHAR(ADD_MONTHS(SYSDATE,+1) - 20,'YYYY-MM');
  		END IF;

  	OPEN OUT_LIST FOR
  		SELECT TABLE_T.LEAD_IMPLEMENT_DEPT,
  				TABLE_T.ART_CHANGE_SUM,
  				...
  		FROM(
  			SELECT T.LEAD_IMPLEMENT_DEPT,
  					T.ART_CHANGE_SUM,
  					...,
  					ROWNUM AS ROWNO
  					FROM(
  			SELECT LEAD_IMPLEMENT_DEPT,
  			       ART_CHANGE_SUM,
  			       ....
  			FROM PCKG_AIP_VCDS_LINE_COVERAGE
  			WHERE (IN_VCDS_MONTH   IS NULL OR
  				   VCDS_MONTH      = IN_VCDS_MONTH)
  			ORDER BY VCDS_MONTH )T)TABLE_T
  			WHERE TABLE_T.ROWNO BETWEEN IN_START_PAGE AND IN_DEN_PAGE;

  	OUT_MSG := 'PCKG_AIP_VCDS_LINE_COVERAGE.PCKG_AIP_VCDS_LINE_COVERAGE 执行成功';
  	RETURN;
 EXCEPTION
 	WHERE OTHERS THEN
 		IF OUT_LIST%ISOPEN THEN
 			CLOSE OUT_LIST;
 		END IF;
 		OUT_FLAG := '-1';
 		OUT_MSG := SQLERRM(SQLCODE);
 		PCKG_CTP_LG_PUBLIC.LOG('PCKG_AIP_VCDS_LINE_COVERAGE.PROC_QUERY_VCDS_LINE_COVERAGE',
 			SQLERRM(SQLCODE));
 		RETURN;
 	END;
 END PCKG_AIP_VCDS_LINE_COVERAGE;







